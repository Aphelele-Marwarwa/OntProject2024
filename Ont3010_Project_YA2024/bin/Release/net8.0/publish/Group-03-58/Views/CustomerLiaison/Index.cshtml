@{
    ViewData["Title"] = "Customer Liaison Dashboard";
    Layout = "~/Views/Shared/_CustomerLiaisonLayout.cshtml";
}
<div class="containers mt-5">
    <!-- Welcome Message -->
    <div class="card shadow-lg p-4 mb-5 bg-white rounded">
        <div class="container-fluid my-4">
            <div class="card shadow-lg p-4 mb-5 bg-white rounded">
                <div class="text-center mb-4">
                    <h1 class="display-4">Customer Liaison Dashboard</h1>
                    <p class="lead">Welcome, @ViewData["FirstName"] @ViewData["LastName"]!</p>
                </div>
            </div>
                  
            <header class="d-flex justify-content-between align-items-center mb-4">
               
                <div>
                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "FridgeAllocation")'">Add New Allocation</button>
                </div>
            </header>

            <!-- Overview Cards -->
            <section class="row mb-4">
                <!-- Total Customers -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card bg-light border-primary shadow-sm">
                        <div class="card-body text-center">
                            <h4 class="card-title">Total Customers</h4>
                            <h2 class="card-text text-primary">@ViewData["TotalCustomers"]</h2>
                            <i class="fas fa-users fa-3x text-primary"></i>
                        </div>
                        <div class="card-footer bg-light">
                            <small class="text-muted">Last updated: @((DateTime)ViewData["LastUpdated"])</small>
                        </div>
                    </div>
                </div>

                <!-- Pending Allocations -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card bg-light border-warning shadow-sm">
                        <div class="card-body text-center">
                            <h4 class="card-title">Pending Allocations</h4>
                            <h2 class="card-text text-warning">@ViewData["PendingAllocations"]</h2>
                            <i class="fas fa-exclamation-triangle fa-3x text-warning"></i>
                        </div>
                        <div class="card-footer bg-light">
                            <small class="text-muted">Last updated: @((DateTime)ViewData["LastUpdated"])</small>
                        </div>
                    </div>
                </div>

                <!-- Fridges In Stock -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card bg-light border-success shadow-sm">
                        <div class="card-body text-center">
                            <h4 class="card-title">Fridges In Stock</h4>
                            <h2 class="card-text text-success">@ViewData["TotalFridges"]</h2>
                            <i class="fas fa-cube fa-3x text-success"></i>
                        </div>
                        <div class="card-footer bg-light">
                            <small class="text-muted">Last updated: @((DateTime)ViewData["LastUpdated"])</small>
                        </div>
                    </div>
                </div>

                <!-- Processed Allocations -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card bg-light border-info shadow-sm">
                        <div class="card-body text-center">
                            <h4 class="card-title">Processed Allocations</h4>
                            <h2 class="card-text text-info">@ViewData["TotalProcessedAllocations"]</h2>
                            <i class="fas fa-check-circle fa-3x text-info"></i>
                        </div>
                        <div class="card-footer bg-light">
                            <small class="text-muted">Last updated: @((DateTime)ViewData["LastUpdated"])</small>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Recent Allocations Table -->
            <section class="mb-4">
                <h2 class="mb-4">Recent Allocations</h2>
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Customer</th>
                                <th>Fridge Model</th>
                                <th>Condition</th>
                                <th>Allocation Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewData["FridgeAllocations"] is List<Ont3010_Project_YA2024.Models.CustomerLiaison.FridgeAllocation> fridgeAllocations)
                            {
                                @foreach (var allocation in fridgeAllocations)
                                {
                                    <tr>
                                        <td>@allocation.Customer?.LastName</td>
                                        <td>@allocation.Fridge?.ModelType</td>
                                        <td>@allocation.Fridge?.Condition</td>
                                        <td>@allocation.AllocationDate.ToShortDateString()</td>
                                        <td>
                                            @if (allocation.IsProcessed)
                                            {
                                                <span class="badge bg-success">Processed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Pending</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No recent allocations available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Fridge Allocation Trends -->
            <section>
                <h2 class="mb-4">Fridge Allocation Trends</h2>
                <div class="card shadow-sm">
                    <div class="card-body">
                        <canvas id="allocationTrendsChart" style="width: 40px; height: 200px;"></canvas> <!-- Adjust the size as needed -->
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
    <!-- Chart.js Script -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('allocationTrendsChart').getContext('2d');
        var allocationTrendsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Allocated', 'Pending', 'In Stock'],
                datasets: [{
                    label: 'Fridge Allocation Overview',
                    data: [@ViewData["TotalAllocated"], @ViewData["PendingAllocations"], @ViewData["TotalFridges"]],
                    backgroundColor: ['rgba(54, 162, 235, 0.5)', 'rgba(255, 159, 64, 0.5)', 'rgba(75, 192, 192, 0.5)'],
                    borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 159, 64, 1)', 'rgba(75, 192, 192, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.dataset.label + ': ' + context.raw;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>

    <script>
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
            }, 3000);
        });
    </script>

    <style>
        .welcome-card {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
        }
    </style>
}
