@model IEnumerable<Ont3010_Project_YA2024.Models.InventoryLiaison.ScrappedFridge>

@{
    ViewData["Title"] = "Scrapped Fridges";
    Layout = ViewData["Layout"] as string;
}
@if (TempData["success"] != null)
{
    <div id="createdMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="Fridge-details-container">
<div class="Fridge-details-container">
    <h1 class="text-center">
        <i class="fas fa-trash"></i> Scrapped Fridges
    </h1>
        <div class="d-flex justify-content-center align-items-center mb-3">
            <form asp-action="Index" method="get" class="form-inline">
                <div class="input-group">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by Fridge ID" value="@ViewData["CurrentFilter"]" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-search"></i> Search
                        </button>
                    </div>
                </div>
            </form>
        </div>

</div>
    <div class="sort-options mb-3">
        <label for="sortOrder">Sort By:</label>
        <select id="sortOrder" onchange="updateSort()" data-current-sort="@ViewData["CurrentSort"]">
            <option value="FridgeId" selected="@(ViewData["CurrentSort"]?.ToString() == "FridgeId")">Fridge ID</option>
            <option value="ScrappedDate" selected="@(ViewData["CurrentSort"]?.ToString() == "ScrappedDate")">Scrapped Date</option>
            <!-- Add other sorting options as needed -->
        </select>

        <label for="sortDirection">Sort Direction:</label>
        <select id="sortDirection" onchange="updateSort()">
            <option value="asc" selected="@(ViewData["CurrentDirection"]?.ToString() == "asc")">Ascending</option>
            <option value="desc" selected="@(ViewData["CurrentDirection"]?.ToString() == "desc")">Descending</option>
        </select>
    </div>
<div class="table-responsive">
    <table class="table table-striped table-hover custom-table">
        <thead>
            <tr>
                <th>Fridge ID</th>
                <th>Scrap Date</th>
                <th>Reason</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.FridgeId</td>
                    <td>@item.ScrapDate.ToString("d")</td>
                    <td>@item.ScrapReason</td>
                    <td>@item.Notes</td>
                    <td>
                            <form asp-action="Restore" method="post">
                                <input type="hidden" name="FridgeId" value="@item.FridgeId" />
                                <input type="hidden" name="FridgeSerialNumber" value="@item.FridgeSerialNumber" />
                                <input type="hidden" name="EmployeeId" value="@item.EmployeeId" />

                                <button type="submit" class="btn btn-warning btn-sm" onclick="return confirm('Are you sure you want to restore this Fridge?');">
                                    <i class="fas fa-undo"></i> Restore
                                </button>
                            </form>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
    <div class="pagination-container">
        @if (Model != null && Model.Any())
        {
            <div class="pagination">
                @if (ViewBag.CurrentPage > 1) // Check if current page is greater than 1 for Previous button
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
                }
                else
                {
                    <a class="btn btn-secondary disabled">Previous</a>
                    // Disabled button if on the first page
                }

                <span>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

                @if (ViewBag.CurrentPage < ViewBag.TotalPages) // Check if current page is less than total pages for Next button
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" class="btn btn-secondary">Next</a>
                }
                else
                {
                    <a class="btn btn-secondary disable">Next</a>
                    // Disabled button if on the last page
                }
            </div>
        }
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
      
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
                $("#restoredMessage").fadeOut();
                $("#errorMessage").fadeOut();
            }, 3000);
        });

    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateSort() {
            const sortOrder = document.getElementById("sortOrder").value;
            const sortDirection = document.getElementById("sortDirection").value;
            const currentUrl = new URL(window.location.href);

            // Update the URL parameters
            currentUrl.searchParams.set("sortOrder", sortOrder);
            currentUrl.searchParams.set("sortDirection", sortDirection);

            // Redirect to the updated URL
            window.location.href = currentUrl.toString();
        }
    </script>
    <style>
        /* Custom CSS for table */

        .Fridge-details-container {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            border-radius: .375rem;
            padding: 10px;
            margin: 10px 0;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .custom-table {
            background-color: rgba(240, 240, 240, 0.8);
            color: #333;
        }

            .custom-table th,
            .custom-table td {
                vertical-align: middle;
            }

            .custom-table th {
                font-weight: bold;
            }

            .custom-table thead th {
                border-bottom: 2px solid #333;
            }

        /* Center-align the heading */
        h1 {
            margin-bottom: 1.5rem;
        }

        /* Style for buttons */
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .btn-primary i {
                margin-right: 0.5rem;
            }
    </style>
    <script>
        $(document).ready(function () {
            // Example JavaScript for future use
        });
    </script>
}
