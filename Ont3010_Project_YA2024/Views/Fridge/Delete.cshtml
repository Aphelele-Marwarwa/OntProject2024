@model Ont3010_Project_YA2024.Models.InventoryLiaison.Fridge

@{
    ViewData["Title"] = "Delete Fridge";
    Layout = ViewData["Layout"] as string;
}
<div class="container custom-container">
<h1 class="text-center custom-title">
    <i class="fas fa-trash-alt"></i> @ViewData["Title"]
</h1>

<div class="container custom-container">
    <h4 class="text-center">Fridge Information</h4>
    <hr />
    <div class="alert alert-warning custom-alert" role="alert">
        <h5 class="text-center">Are you sure you want to delete this item?</h5>
    </div>
    <dl class="row">
        @if (Model.FridgeImage != null)
        {
            <div class="form-group">
                <img src="data:image/png;base64,@Convert.ToBase64String(Model.FridgeImage)" alt="Fridge Image" width="200" />
            </div>
        }

        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.ModelType)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.ModelType)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.DoorType)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.DoorType)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.Size)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.Size)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.Capacity)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.Capacity)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.Condition)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.Condition)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.SerialNumber)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.SerialNumber)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.SupplierName)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.SupplierName)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.SupplierContact)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.SupplierContact)
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.DeliveryDocumentation)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @if (Model.DeliveryDocumentation != null)
            {
                <a href="@Url.Action("PreviewFile", "Fridge", new { id = Model.FridgeId, serialNumber = Model.SerialNumber })">
                    @Model.DeliveryDocumentationFileName
                </a>
            }
            else
            {
                <span>No Document Available</span>
            }
        </dd>
        <dt class="col-sm-3 custom-dt">
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd class="col-sm-9 custom-dd">
            @Html.DisplayFor(model => model.Note)
        </dd>
        <dt class="col-sm-3 custom-dd">@Html.DisplayNameFor(model => model.LastModifiedBy)</dt>
        <dd class="col-sm-9">
            @if (Model.Employee != null && !string.IsNullOrEmpty(Model.LastModifiedBy))
            {
                <span>@Model.Employee.FirstName @Model.Employee.LastName</span>
            }
            else
            {
                <span>Not yet modified</span>
            }
        </dd>

        <dt class="col-sm-3 custom-dd">Last Modified Date</dt>
        <dd class="col-sm-9 custom-dt">
            @if (Model.LastModifiedDate == null || Model.LastModifiedDate == default(DateTime))
            {
                <span>Not yet modified</span>
            }
            else
            {
                @Model.LastModifiedDate?.ToString("g")
            }
        </dd>

        <dt class="col-sm-3 custom-dd">Fridge Status</dt>
        <dd class="col-sm-9 custom-dt">
            @if (Model.IsDeleted)
            {
                <span class="fridge-status deleted">Deleted</span>
            }
            else if (Model.IsScrapped)
            {
                <span class="fridge-status scrapped">Scrapped</span>
            }
            else if (Model.IsAllocated)
            {
                <span class="fridge-status allocated">Allocated</span>
            }
            else if (Model.IsInStock)
            {
                <span class="fridge-status in-stock">In Stock</span>
            }
            else
            {
                <span class="fridge-status out-of-stock">Out of Stock</span>
            }
        </dd>

        <dt class="col-sm-3 custom-dd">Allocated By</dt>
        <dd class="col-sm-9 custom-dt">
            @if (ViewBag.AllocatedBy != null && ViewBag.AllocatedBy != "Unknown")
            {
                <span>@ViewBag.AllocatedBy</span>
            }
            else
            {
                <span>Not yet allocated</span>
            }
        </dd>

        <dt class="col-sm-3 custom-dd">Allocated To</dt>
        <dd class="col-sm-9 custom-dt">
            @if (ViewBag.CustomerName != null && ViewBag.CustomerName != "Unknown")
            {
                <span>@ViewBag.CustomerName</span>
            }
            else
            {
                <span>No customer allocated</span>
            }
        </dd>

        <dt class="col-sm-3 custom-dd">Allocation Date</dt>
        <dd class="col-sm-9 custom-dt">
            @if (ViewBag.AllocationDate == null || ViewBag.AllocationDate == default(DateTime))
            {
                <span>Not allocated yet</span>
            }
            else
            {
                @ViewBag.AllocationDate.ToString("g") <!-- Formats the date for display -->
            }
        </dd>
    </dl>
</div>
</div>
<form asp-action="Delete" method="post" class="text-center custom-buttons mt-3">
    <input type="hidden" asp-for="FridgeId" />
    <input type="hidden" asp-for="SerialNumber" />
    <button type="submit" class="btn btn-danger">
        <i class="fas fa-trash-alt"></i> Delete
    </button>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to List
    </a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
            }, 3000);
        });
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .custom-container {
            max-width: 900px; /* Increased width for better layout */
            margin: auto;
            background-color: #f8f9fa; /* Light background for contrast */
            border-radius: 10px; /* Rounded corners */
            padding: 20px; /* Padding for space */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
        }
        .custom-title {
            color: #dc3545;
        }

        .custom-container {
            max-width: 800px;
            margin: auto;
        }

        .custom-dt {
            font-weight: bold;
        }

        .custom-dd {
            margin-bottom: 0.5rem;
        }

        .custom-download-link {
            color: #28a745;
        }

        .custom-buttons .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
        }

            .custom-buttons .btn-danger:hover {
                background-color: #c82333;
                border-color: #bd2130;
            }

        .custom-buttons .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

            .custom-buttons .btn-secondary:hover {
                background-color: #5a6268;
                border-color: #545b62;
            }

        .custom-alert {
            background-color: #fff3cd;
            border-color: #ffeeba;
        }

        .mt-3 {
            margin-top: 1rem;
        }
    </style>
}
