@model Ont3010_Project_YA2024.Models.InventoryLiaison.Fridge

@{
    ViewData["Title"] = "Fridge Details";
    Layout = ViewData["Layout"] as string;
}
<div class="container custom-container">
<h1 class="text-center custom-title">
    <i class="fas fa-fridge"></i> @ViewData["Title"]
</h1>

<input type="hidden" asp-for="FridgeId" />
<input type="hidden" asp-for="SerialNumber" />

<div class="container custom-container">
    <h4 class="text-center">Fridge Information</h4>
    <hr />

    <div class="row mb-4">
        @if (Model.FridgeImage != null)
        {
            <div class="col-md-4 text-center">
                <img src="data:image/png;base64,@Convert.ToBase64String(Model.FridgeImage)" alt="Fridge Image" class="img-fluid rounded" />
            </div>
        }
        <div class="col-md-8">
            <dl class="row">
                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.ModelType)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.ModelType)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.DoorType)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.DoorType)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.Size)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.Size)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.Capacity)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.Capacity)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.Condition)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.Condition)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.SerialNumber)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.SerialNumber)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.SupplierName)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.SupplierName)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.SupplierContact)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.SupplierContact)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.DeliveryDocumentation)</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (Model.DeliveryDocumentation != null)
                    {
                        <a href="@Url.Action("PreviewFile", "Fridge", new { id = Model.FridgeId, serialNumber = Model.SerialNumber })">
                            @Model.DeliveryDocumentationFileName
                        </a>
                    }
                    else
                    {
                        <span>No Document Available</span>
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.Note)</dt>
                <dd class="col-sm-8 custom-dd">@Html.DisplayFor(model => model.Note)</dd>

                <dt class="col-sm-4 custom-dt">@Html.DisplayNameFor(model => model.LastModifiedBy)</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (Model.Employee != null && !string.IsNullOrEmpty(Model.LastModifiedBy))
                    {
                        <span>@Model.Employee.FirstName @Model.Employee.LastName</span>
                    }
                    else
                    {
                        <span>Not yet modified</span>
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">Last Modified Date</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (Model.LastModifiedDate == null || Model.LastModifiedDate == default(DateTime))
                    {
                        <span>Not yet modified</span>
                    }
                    else
                    {
                        @Model.LastModifiedDate?.ToString("g")
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">Fridge Status</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (Model.IsDeleted)
                    {
                        <span class="fridge-status deleted">Deleted</span>
                    }
                    else if (Model.IsScrapped)
                    {
                        <span class="fridge-status scrapped">Scrapped</span>
                    }
                    else if (Model.IsAllocated)
                    {
                        <span class="fridge-status allocated">Allocated</span>
                    }
                    else if (Model.IsInStock)
                    {
                        <span class="fridge-status in-stock">In Stock</span>
                    }
                    else
                    {
                        <span class="fridge-status out-of-stock">Out of Stock</span>
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">Allocated By</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (ViewBag.AllocatedBy != null && ViewBag.AllocatedBy != "Unknown")
                    {
                        <span>@ViewBag.AllocatedBy</span>
                    }
                    else
                    {
                        <span>Not yet allocated</span>
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">Allocated To</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (ViewBag.CustomerName != null && ViewBag.CustomerName != "Unknown")
                    {
                        <span>@ViewBag.CustomerName</span>
                    }
                    else
                    {
                        <span>No customer allocated</span>
                    }
                </dd>

                <dt class="col-sm-4 custom-dt">Allocation Date</dt>
                <dd class="col-sm-8 custom-dd">
                    @if (ViewBag.AllocationDate == null || ViewBag.AllocationDate == default(DateTime))
                    {
                        <span>Not allocated yet</span>
                    }
                    else
                    {
                        @ViewBag.AllocationDate.ToString("g") <!-- Formats the date for display -->
                    }
                </dd>
            </dl>
        </div>
    </div>
</div>
</div>
<div class="text-center custom-buttons mt-3">
    @if (!Model.IsDeleted && !Model.IsAllocated && !Model.IsScrapped)
    {
        <a asp-action="Edit" asp-route-id="@Model.FridgeId" asp-route-serialNumber="@Model.SerialNumber" class="btn btn-success">
            <i class="fas fa-edit"></i> Edit
        </a>
    }
    
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to List
    </a>

   

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
            }, 3000);
        });
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

    <style>
           .custom-title {
            color: #007bff;
            margin-bottom: 1rem;
        }

        .custom-container {
            max-width: 900px; /* Increased width for better layout */
            margin: auto;
            background-color: #f8f9fa; /* Light background for contrast */
            border-radius: 10px; /* Rounded corners */
            padding: 20px; /* Padding for space */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
        }

        .custom-dt {
            font-weight: bold;
            color: #495057; /* Darker text for labels */
        }

        .custom-dd {
            margin-bottom: 1rem; /* Increased spacing between items */
            color: #343a40; /* Dark text color */
        }

        .custom-download-link {
            color: #28a745; /* Green color for download links */
        }

        .fridge-status {
            font-weight: bold;
            padding: 5px;
            border-radius: 5px;
            color: white; /* White text for better visibility */
        }

            .fridge-status.deleted {
                background-color: #dc3545; /* Red for deleted */
            }

            .fridge-status.scrapped {
                background-color: #6c757d; /* Grey for scrapped */
            }

            .fridge-status.allocated {
                background-color: #ffc107; /* Yellow for allocated */
            }

            .fridge-status.in-stock {
                background-color: #28a745; /* Green for in stock */
            }

            .fridge-status.out-of-stock {
                background-color: #17a2b8; /* Cyan for out of stock */
            }

        .custom-buttons .btn {
            margin: 0 5px; /* Space between buttons */
        }
    </style>
}

 
