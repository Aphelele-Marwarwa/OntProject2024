@model IEnumerable<Customer>
@using Ont3010_Project_YA2024.Models.CustomerLiaison

@{
    ViewData["Title"] = "Customer Index";
    Layout = ViewData["Layout"] as string;
}

@if (TempData["created"] != null)
{
    <div id="createdMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["created"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["deleted"] != null)
{
    <div id="deletedMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-trash-alt"></i> @TempData["deleted"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["updated"] != null)
{
    <div id="updatedMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-pencil-alt"></i> @TempData["updated"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["restored"] != null)
{
    <div id="restoredMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-undo-alt"></i> @TempData["restored"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="customer-details-container">
    <h1 class="text-center">
        <i class="fas fa-users"></i> Customer Liaison Index
    </h1>


    <div class="container mb-4">
        <div class="row">
            <div class="col-md-6">
                <p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Create New
                    </a>
                    <a asp-controller="FridgeAllocation" asp-action="Index" class="btn btn-secondary ml-2">
                        <i class="fas fa-list"></i> View Allocations
                    </a>
                </p>
            </div>
            <div class="col-md-6">
                <form asp-action="Index" method="get" class="form-inline float-right">
                    <div class="input-group">
                        <input type="text" name="searchString" class="form-control" placeholder="Search by name" value="@ViewData["CurrentFilter"]" />
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i> Search
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <div class="sort-options mb-3">
            <label for="sortOrder">Sort By:</label>
            <select id="sortOrder" data-current-sort="@ViewData["CurrentSort"]">
                <option value="FirstName" selected="@(ViewData["CurrentSort"]?.ToString() == "FirstName")">First Name</option>
                <option value="LastName" selected="@(ViewData["CurrentSort"]?.ToString() == "LastName")">Last Name</option>
                <option value="EmailAddress" selected="@(ViewData["CurrentSort"]?.ToString() == "EmailAddress")">Email Address</option>
                <option value="CompanyName" selected="@(ViewData["CurrentSort"]?.ToString() == "CompanyName")">Company Name</option>
            </select>

            <label for="sortDirection">Sort Direction:</label>
            <select id="sortDirection">
                <option value="asc" selected="@(ViewData["CurrentDirection"]?.ToString() == "asc")">Ascending</option>
                <option value="desc" selected="@(ViewData["CurrentDirection"]?.ToString() == "desc")">Descending</option>
            </select>
        </div>

        <table class="table table-striped table-hover custom-table">
            <thead>
                <tr>
                   @*  <th>Customer ID</th> *@
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email Address</th>
                    <th>Business Name</th>
                    @*  <th>Business Name</th> *@
                  @*   <th>Allocation Status</th> <!-- New header for allocation status --> *@
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="@(item.IsDeleted ? "is-deleted" : "")">
                       @*  <td>@item.CustomerId</td> *@
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.EmailAddress</td>
                        <td>@item.BusinessName</td>
                       @*  <td>
                            @if (item.IsDeleted)
                            {
                                <span class="text-danger">No Allocation Status</span> <!-- Show no status for deleted customers -->
                            }
                            else
                            {
                                @if (item.HasAllocations)
                                {
                                    // Get the latest allocation if available
                                    var latestAllocation = item.ProcessAllocations?.OrderByDescending(a => a.AllocationDate).FirstOrDefault();


                                    if (latestAllocation != null)
                                    {
                                        // Display the latest allocation status with color coding
                                        switch (latestAllocation.ApprovalStatus)
                                        {
                                            case "Approved":
                                                <span class="text-success fw-bold">@latestAllocation.ApprovalStatus</span> <!-- Approved status -->
                                                break;
                                            case "Pending":
                                                <span class="text-warning fw-bold">@latestAllocation.ApprovalStatus</span> <!-- Pending status -->
                                                break;
                                            case "Rejected":
                                                <span class="text-danger fw-bold">@latestAllocation.ApprovalStatus</span> <!-- Rejected status -->
                                                break;
                                            default:
                                                <span class="text-secondary fw-bold">@latestAllocation.ApprovalStatus</span> <!-- Other status -->
                                                break;
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-danger">Not yet processed</span>
                                    }
                                }
                                else
                                {
                                    <span class="text-danger">No Allocations</span>
                                }
                            }
                        </td> *@

                        <td>
                            @if (item.IsDeleted)
                            {
                                <a asp-action="Details" asp-route-id="@item.CustomerId" class="btn btn-success btn-sm">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                                <form asp-action="Restore" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@item.CustomerId" />
                                    <button type="submit" class="btn btn-warning btn-sm"
                                            onclick="return confirm('Are you sure you want to restore this customer?');">
                                        <i class="fas fa-undo"></i> Restore
                                    </button>
                                </form>
                            }
                            else
                            {
                                <a asp-action="Details" asp-route-id="@item.CustomerId" class="btn btn-success btn-sm">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                              @*   <a asp-action="Edit" asp-route-id="@item.CustomerId" class="btn btn-primary btn-sm">
                                    <i class="fas fa-edit"></i> Edit
                                </a> *@
                                <a asp-action="Delete" asp-route-id="@item.CustomerId" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i> Delete
                                </a>

                                <a asp-controller="FridgeAllocation" asp-action="Create"
                                   asp-route-id="@item.CustomerId" 
                                   class="btn btn-info btn-sm">
                                    <i class="fas fa-plus-circle"></i> allocate
                                </a>

                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="pagination-container">
        @if (Model != null && Model.Any())
        {
            <div class="pagination">
                @if (ViewBag.CurrentPage > 1) // Check if current page is greater than 1 for Previous button
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
                }
                else
                {
                    <a class="btn btn-secondary disabled">Previous</a>
                    // Disabled button if on the first page
                }

                <span>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

                @if (ViewBag.CurrentPage < ViewBag.TotalPages) // Check if current page is less than total pages for Next button
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" class="btn btn-secondary">Next</a>
                }
                else
                {
                    <a class="btn btn-secondary disable">Next</a>
                    // Disabled button if on the last page
                }
            </div>
        }
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .customer-details-container {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            border-radius: .375rem;
            padding: 10px;
            margin: 10px 0;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        /* Custom CSS for table */
        .custom-table {
            background-color: rgba(240, 240, 240, 0.8);
            color: #333;
        }

            .custom-table th,
            .custom-table td {
                vertical-align: middle;
            }

            .custom-table th {
                font-weight: bold;
            }

            .custom-table thead th {
                border-bottom: 2px solid #333;
            }

            .custom-table tbody tr.is-deleted {
                color: red; /* Indicate deleted rows */
            }


        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border-color: #c3e6cb;
        }
    </style>
    <script>
        document.getElementById('sortOrder').addEventListener('change', function () {
            applySort();
        });

        document.getElementById('sortDirection').addEventListener('change', function () {
            applySort();
        });

        function applySort() {
            var sortOrder = document.getElementById('sortOrder').value;
            var sortDirection = document.getElementById('sortDirection').value;
            var searchString = '@ViewData["CurrentFilter"]';  // Keep current search filter

            var url = `@Url.Action("Index")?sortOrder=${sortOrder}&sortDirection=${sortDirection}&searchString=${searchString}`;
            window.location.href = url;
        }
    </script>

   
    <script>
        // Function to hide TempData messages after 3 seconds
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
                $("#restoredMessage").fadeOut();
                $("#errorMessage").fadeOut();
            }, 3000);
        });

    </script>
}
