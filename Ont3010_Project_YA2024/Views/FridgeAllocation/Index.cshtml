@model IEnumerable<Ont3010_Project_YA2024.Models.CustomerLiaison.FridgeAllocation>

@{
    ViewData["Title"] = "Fridge Allocations";
    Layout = ViewData["Layout"] as string;
}
@if (TempData["created"] != null)
{
    <div id="createdMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["created"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["deleted"] != null)
{
    <div id="deletedMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-trash-alt"></i> @TempData["deleted"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["updated"] != null)
{
    <div id="updatedMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-pencil-alt"></i> @TempData["updated"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["restored"] != null)
{
    <div id="restoredMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-undo-alt"></i> @TempData["restored"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="Fridge-details-container">
    <h1 class="text-center">
        <i class="fas fa-fridge"></i> Fridge Allocations
    </h1>

    <div class="container mt-4">
       
        <div class="container mt-4">
            <div class="row mb-3">
                <div class="col-md-12">
                    <form method="get" asp-action="Index">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control" placeholder="Search by Customer Name or Fridge ID" />
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
            <div class="sort-options mb-3">
                <label for="sortOrder">Sort By:</label>
                <select id="sortOrder" onchange="updateSort()" data-current-sort="@ViewData["CurrentSort"]">
                    <option value="FridgeId" selected="@(ViewData["CurrentSort"]?.ToString() == "FridgeId")">Fridge ID</option>
                    <option value="SerialNumber" selected="@(ViewData["CurrentSort"]?.ToString() == "SerialNumber")">Serial Number</option>
                    <option value="CustomerFirstName" selected="@(ViewData["CurrentSort"]?.ToString() == "CustomerFirstName")">Customer First Name</option>
                    <option value="CustomerLastName" selected="@(ViewData["CurrentSort"]?.ToString() == "CustomerLastName")">Customer Last Name</option>
                    <option value="AllocationDate" selected="@(ViewData["CurrentSort"]?.ToString() == "AllocationDate")">Allocation Date</option>
                    <!-- Add other sorting options as needed -->
                </select>

                <label for="sortDirection">Sort Direction:</label>
                <select id="sortDirection" onchange="updateSort()">
                    <option value="asc" selected="@(ViewData["CurrentDirection"]?.ToString() == "asc")">Ascending</option>
                    <option value="desc" selected="@(ViewData["CurrentDirection"]?.ToString() == "desc")">Descending</option>
                </select>
            </div>

           
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Fridge Allocation ID</th>
                            <th>Customer</th>

                            <th>Allocation Date</th>
                            <th>Duration (Months)</th>
                            <th>Special Instructions</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.FridgeAllocationId</td>
                                <td>@item.Customer.FirstName @item.Customer.LastName</td>  <!-- Display the customer's full name -->

                                <td>@item.AllocationDate.ToString("d")</td>
                                <td>@item.Duration</td>
                            
                                <td>@item.SpecialInstructions</td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@item.FridgeAllocationId" class="btn btn-info btn-sm">
                                        <i class="fas fa-eye"></i> Details
                                    </a>
                                    <!-- You can add more actions here, e.g., Edit, Delete -->
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pagination-container">
                @if (Model != null && Model.Any())
                {
                    <div class="pagination">
                        @if (ViewBag.CurrentPage > 1) // Check if current page is greater than 1 for Previous button
                        {
                            <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
                        }
                        else
                        {
                            <a class="btn btn-secondary disabled">Previous</a>
                            // Disabled button if on the first page
                        }

                        <span>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages) // Check if current page is less than total pages for Next button
                        {
                            <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" class="btn btn-secondary">Next</a>
                        }
                        else
                        {
                            <a class="btn btn-secondary disable">Next</a>
                            // Disabled button if on the last page
                        }
                    </div>
                }
            </div>
        @if (User.IsInRole("Administrator"))
        {
            <div class="mb-3">
                <a asp-controller="Customer" asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to Customers 
                </a>
            </div>
        }
        </div>
    </div>
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            function updateSort() {
                const sortOrder = document.getElementById("sortOrder").value;
                const sortDirection = document.getElementById("sortDirection").value;
                const currentUrl = new URL(window.location.href);

                // Update the URL parameters
                currentUrl.searchParams.set("sortOrder", sortOrder);
                currentUrl.searchParams.set("sortDirection", sortDirection);

                // Redirect to the updated URL
                window.location.href = currentUrl.toString();
            }
        </script>
        <style>
        .Fridge-details-container {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            border-radius: .375rem;
            padding: 10px;
            margin: 10px 0;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
            .text-center {
                text-align: center;
            }

            .btn-primary {
                background-color: #007bff;
                border-color: #007bff;
            }

                .btn-primary:hover {
                    background-color: #0056b3;
                    border-color: #004db3;
                }

            .btn-info {
                background-color: #17a2b8;
                border-color: #17a2b8;
            }

                .btn-info:hover {
                    background-color: #138496;
                    border-color: #117a8b;
                }

            .table {
                background-color: #fff;
                border-radius: .25rem;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
            }

                .table th {
                    background-color: #f8f9fa;
                }

            .fa-fridge {
                color: #007bff;
            }

            .fa-plus {
                color: #28a745;
            }

            .fa-eye {
                color: #ffffff;
            }

            .btn-sm {
                padding: .25rem .5rem;
                font-size: .875rem;
                line-height: 1.5;
                border-radius: .2rem;
            }

            .table-responsive {
                overflow-x: auto;
            }

            .table-striped tbody tr:nth-of-type(odd) {
                background-color: #f9f9f9;
            }

            .table-hover tbody tr:hover {
                background-color: #f1f1f1;
            }
        </style>
    <script>
        // Function to hide TempData messages after 3 seconds
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
                $("#restoredMessage").fadeOut();
                $("#errorMessage").fadeOut();
            }, 3000);
        });

    </script>
    
    }
