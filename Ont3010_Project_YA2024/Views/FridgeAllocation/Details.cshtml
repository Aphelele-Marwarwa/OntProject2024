@model Ont3010_Project_YA2024.Models.CustomerLiaison.FridgeAllocation

@{
    ViewData["Title"] = "Fridge Allocation Details";
    Layout = ViewData["Layout"] as string;
}
<div class="Fridge-details-container">
    <div class="fridge-allocation-details">
        <h1 class="text-center">
            <i class="fas fa-info-circle"></i> Fridge Allocation Details
        </h1>

        <div class="container mt-4">
            <h4>Fridge Allocation</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.FridgeAllocationId)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.FridgeAllocationId)
                </dd>

                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.Customer)
                </dt>
                <dd class="col-sm-9">
                    @Model.Customer.FirstName @Model.Customer.LastName
                </dd>

                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.AllocationDate)
                </dt>
                <dd class="col-sm-9">
                    @Model.AllocationDate.ToString("d")
                </dd>

                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.Duration)
                </dt>
                <dd class="col-sm-9">
                    @Model.Duration
                </dd>


                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.SpecialInstructions)
                </dt>
                <dd class="col-sm-9">
                    @Model.SpecialInstructions
                </dd>
                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.CreatedBy)</dt>
                <dd class="col-sm-9">
                    @if (Model.Employee != null && !string.IsNullOrEmpty(Model.CreatedBy))
                    {
                        <span>@Model.Employee.FirstName @Model.Employee.LastName</span>
                    }
                    else
                    {
                        <span>Not yet modified</span>
                    }
                </dd>

                <dt class="col-sm-3 font-weight-bold">
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </dt>
                <dd class="col-sm-9">
                    @Model.CreatedDate.ToString("yyyy-MM-dd")
                </dd>
                <!-- Processing Status -->
                <dt class="col-sm-3 font-weight-bold">
                    Processing Status
                </dt>
                <dd class="col-sm-9">
                    @if (Model.IsProcessed)
                    {
                        <span class="text-success">Processed</span>
                    }
                    else
                    {
                        <span class="text-warning">Pending</span>
                    }
                </dd>

                @if (Model.IsProcessed)
                {
                    <!-- Latest Processing Details -->
                    <dt class="col-sm-3 font-weight-bold">
                        Approval Status
                    </dt>
                    <dd class="col-sm-9">
                        @Model.ProcessAllocations.OrderByDescending(pa => pa.LastModifiedDate).FirstOrDefault()?.ApprovalStatus
                    </dd>

                    <dt class="col-sm-3 font-weight-bold">
                        Approval Note
                    </dt>
                    <dd class="col-sm-9">
                        @Model.ProcessAllocations.OrderByDescending(pa => pa.LastModifiedDate).FirstOrDefault()?.ApprovalNote
                    </dd>

                    <dt class="col-sm-3 font-weight-bold">
                        Delivery/Pickup Date
                    </dt>
                    <dd class="col-sm-9">
                        @Model.ProcessAllocations.OrderByDescending(pa => pa.LastModifiedDate).FirstOrDefault()?.AllocationDate.ToString("d")
                    </dd>
                }
            </dl>
        </div>

        <div class="mt-3">
            @if (User.IsInRole("Administrator"))
            {
                <div class="mb-3">
                    <a asp-controller="Customer" asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Customers
                    </a>
                </div>
            }
            else {
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
            </a>
            }
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .Fridge-details-container {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            border-radius: .375rem;
            padding: 10px;
            margin: 10px 0;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .fridge-allocation-details .text-center {
            text-align: center;
        }

        .fridge-allocation-details .container {
            max-width: 800px;
            margin: 0 auto;
        }

        .fridge-allocation-details .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .fridge-allocation-details .btn-primary:hover {
                background-color: #0056b3;
                border-color: #004db3;
            }

        .fridge-allocation-details .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

            .fridge-allocation-details .btn-secondary:hover {
                background-color: #5a6268;
                border-color: #545b62;
            }

        .fridge-allocation-details .fa-info-circle {
            color: #17a2b8;
        }

        .fridge-allocation-details .fa-arrow-left {
            color: #ffffff;
        }

        .fridge-allocation-details .font-weight-bold {
            font-weight: 700;
        }
    </style>
    <script>
        // Function to hide TempData messages after 3 seconds
        $(document).ready(function () {
            setTimeout(function () {
                $("#createdMessage").fadeOut();
                $("#deletedMessage").fadeOut();
                $("#updatedMessage").fadeOut();
            }, 3000);
        });
    </script>
}
