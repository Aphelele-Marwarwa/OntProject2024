@model IEnumerable<Ont3010_Project_YA2024.Models.CustomerLiaison.FridgeAllocation>

@{
    ViewData["Title"] = "My Allocations";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml"; // Confirm this layout path
}
<div class="Customer-details-container">
    <h2>My Fridge Allocations</h2>

    <div class="container mt-4">
        <div class="row mb-3">
            <div class="col-md-12">
                <form method="get" asp-action="Index">
                    <div class="input-group">
                        <input type="text" name="searchString" class="form-control" placeholder="Fridge Type" />
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i> Search
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="sort-options mb-3">
            <label for="sortOrder">Sort By:</label>
            <select id="sortOrder" onchange="updateSort()" data-current-sort="@ViewData["CurrentSort"]">
                <option value="ModelType" selected="@(ViewData["CurrentSort"]?.ToString() == "ModelType")">Fridge Type</option>
                <option value="AllocationDate" selected="@(ViewData["CurrentSort"]?.ToString() == "AllocationDate")">Allocation Date</option>
            </select>

            <label for="sortDirection">Sort Direction:</label>
            <select id="sortDirection" onchange="updateSort()">
                <option value="asc" selected="@(ViewData["CurrentDirection"]?.ToString() == "asc")">Ascending</option>
                <option value="desc" selected="@(ViewData["CurrentDirection"]?.ToString() == "desc")">Descending</option>
            </select>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover custom-table">
                    <thead>
                        <tr>
                            <th>Fridge Type</th>
                            <th>Allocation Date</th>
                            <th>Duration</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var allocation in Model)
                        {
                            <tr>
                                <td>@allocation.Fridge?.ModelType</td>
                                <td>@allocation.AllocationDate.ToString("yyyy-MM-dd")</td>
                                <td>@allocation.Duration</td>
                                <td>
                                    <a asp-action="ViewAllocationDetail" asp-route-id="@allocation.FridgeAllocationId" class="btn btn-info">View Details</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
           
            <div class="table-responsive">
                <table class="table table-striped table-hover custom-table">
                    <thead>
                        <tr>
                            <th>Fridge Type</th>
                            <th>Allocation Date</th>
                            <th>Duration</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan="4" class="text-center">No allocations found.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="pagination-container">
        @if (Model != null && Model.Any())
        {
            <div class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
                }
                else
                {
                    <a class="btn btn-secondary disabled">Previous</a>
                }

                <span>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" class="btn btn-secondary">Next</a>
                }
                else
                {
                    <a class="btn btn-secondary disabled">Next</a>
                }
            </div>
        }
    </div>
</div>
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            function updateSort() {
                const sortOrder = document.getElementById("sortOrder").value;
                const sortDirection = document.getElementById("sortDirection").value;
                const currentUrl = new URL(window.location.href);

                // Update the URL parameters
                currentUrl.searchParams.set("sortOrder", sortOrder);
                currentUrl.searchParams.set("sortDirection", sortDirection);

                // Redirect to the updated URL
                window.location.href = currentUrl.toString();
            }
        </script>
        <script>
            // Function to hide TempData messages after 3 seconds
            $(document).ready(function () {
                setTimeout(function () {
                    $("#createdMessage").fadeOut();
                    $("#deletedMessage").fadeOut();
                    $("#updatedMessage").fadeOut();
                    $("#restoredMessage").fadeOut();
                    $("#errorMessage").fadeOut();
                }, 3000);
            });

        </script>
        <style>
            /* Add custom styles for the table and search form */
            .Customer-details-container {
                background-color: #f8f9fa;
                border: 1px solid #ced4da;
                border-radius: .375rem;
                padding: 10px;
                margin: 10px 0;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }

            .table {
                background-color: #ffffff;
            }

                .table th {
                    background-color: #007bff;
                    color: #ffffff;
                }

                .table td, .table th {
                    vertical-align: middle;
                }

            .input-group {
                max-width: 600px;
                margin: 0 auto;
            }

            .input-group-append .btn-primary {
                background-color: #007bff;
                border-color: #007bff;
            }

                .input-group-append .btn-primary:hover {
                    background-color: #0056b3;
                    border-color: #004a9a;
                }
        </style>
    }
